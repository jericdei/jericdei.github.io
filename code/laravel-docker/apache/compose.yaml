name: my-project

services:
    app:
        container_name: my-project-app
        build:
            context: . # We will use a Dockerfile to build our image
            args:
                # This will match our user ID to the container user ID
                # to prevent permission issues
                uid: ${UID:-1000}
                # We need to pass our custom domain for the Apache ServerName
                domain: my-project.localhost
        ports:
            - 80 # Expose port 80 with a random port on our host
            - 42069:5173 # Expose port 5173 with a static port on our host for Vite HMR
        environment: # Use our UID and GID for Apache user and group
            - APACHE_RUN_USER=${UID:-1000}
            - APACHE_RUN_GROUP=${GID:-1000}
        labels:
            - 'traefik.docker.network=mynetwork'
            - 'traefik.http.routers.my-project-app.rule=Host(`my-project.localhost`)'
        volumes:
            - ./:/var/www/html # Mount our project directory into the container
        networks:
            - myinternalnetwork # Link our service to the internal network
            - mynetwork # Link our service to the global network we created
        depends_on:
            - mysql # Wait until MySQL is up and running

    mysql:
        image: mysql/mysql-server:8.0
        container_name: my-project-mysql
        ports:
            # Expose port 3306 with a random port on our host
            # You can also specify a static port like this if you want: "42069:3306"
            - 3306
        environment: # Modify this as you want
            MYSQL_ROOT_PASSWORD: root
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: my_database
            MYSQL_USER: user
            MYSQL_PASSWORD: password
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - myproject_mysql_data:/var/lib/mysql # Persist data between container restarts
        networks:
            - myinternalnetwork
            - mynetwork
        healthcheck: # Check if MySQL is up and running
            test: ['CMD', 'mysqladmin', 'ping', '-proot']
            retries: 3
            timeout: 5s

networks:
    myinternalnetwork:
        driver: bridge
    mynetwork:
        external: true

volumes:
    myproject_mysql_data:
        driver: local
